@mixin clearfix {
  &::before,
  &::after {
    display: block;
    width: 100%;
    height: 0;
    visibility: hidden;
    content: '';
    clear: both;
  }
}

@mixin flexgrid($size) {
  @for $i from 1 through $columns {
    .col-#{$size}-push-#{$i} {
      left: calc(100% / #{$columns / $i});
      position: relative;
    }

    .col-#{$size}-#{$i} {
      width: 100% / ($columns / $i);
      flex: 0 0 (100% / ($columns / $i));
      max-width: (100% / ($columns / $i)); // IE10/11, do not grow bigger than set percentage
    }
  }
}

@mixin respond-to($media) {
  @if $media == handhelds {
    @media only screen and (max-width: $break-small) { @content; }
  }

  @if $media == small-screens {
    @media only screen and (min-width: $break-small + 1) and (max-width: $break-medium) { @content; }
  }

  @if $media == handhelds-and-small-screens {
    @media only screen and (max-width: $break-medium) { @content; }
  }

  @if $media == medium-screens {
    @media only screen and (min-width: $break-medium + 1) and (max-width: $break-large) { @content; }
  }

  @if $media == large-screens {
    @media only screen and (min-width: $break-large + 1) and (max-width: $break-wide) { @content; }
  }

  @if $media == wide-screens {
    @media only screen and (min-width: $break-wide + 1) { @content; }
  }

  @if $media == medium-and-wide-screens {
    @media only screen and (min-width: $break-medium + 1) { @content; }
  }

  @if $media == portrait {
    @media only screen and (orientation: portrait) { @content; }
  }
}

@mixin font($family, $size-default: null, $size-medium: null) {
  font-family: $family, $family-base;

  @if $size-default {
    font-size: $size-default;
  }

  @if $size-default {
    @include respond-to(medium-and-wide-screens) {
      font-size: $size-medium;
    }
  }
}

@mixin text-decoration($colour) {
  display: inline-block;
  text-decoration: none;
  position: relative;

  &::after {
    content: '';
    position: absolute;
    display: block;
    height: 1px;
    width: 0;
    left: 0;
    opacity: 0;
    background: $colour;
    transition: all 0.2s ease-in-out;
  }

  &:hover::after {
    width: 100%;
    opacity: 0.7;
  }
}

@mixin arrowhead {
  border-style: solid;
  border-width: 0.1em 0.1em 0 0;
  content: '';
  display: inline-block;
  height: 0.45em;
  width: 0.45em;
  transform: rotate(135deg);
  position: relative;
  right: -20px;
  top: -3px;
  transition: all 0.2s ease-in-out;
}
